import os
from glob import glob

import numpy as np
import torch
from tqdm import tqdm

training_ids = [
    1,
    2,
    4,
    5,
    8,
    9,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    25,
    27,
    28,
    31,
    34,
    35,
    38,
    45,
    46,
    47,
    49,
    50,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    70,
    74,
    78,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    89,
    91,
    92,
    93,
    94,
    95,
    97,
    98,
    100,
    103,
]


class NTU_RGBD(torch.utils.data.Dataset):
    def __init__(self, root, stage, split_type="cross_subject"):
        super().__init__()
        self.root = root
        self.stage = stage
        self.split_type = split_type

        self.labels = []
        self.skeleton_seqs = []
        if stage == "train":
            self.create_train()
        elif stage == "test":
            self.create_test()

    def is_train(self, sid):
        if self.split_type == "cross_subject":
            return sid in training_ids
        elif self.split_type == "cross_suetup":
            return sid % 2 == 0

    def load(self):
        skeletons_dir = os.path.join(self.root, "nturgb+d_skeletons")
        files = sorted(glob(os.path.join(skeletons_dir, "*.skeleton")))

        data_dicts = []
        for path in tqdm(files, ncols=100, desc="loading"):
            file_name = os.path.basename(path).replace(".skeleton", "")

            if file_name in _ignore_list:
                os.remove(path)
                print("removed", path)
                continue

            subject_id = int(file_name[9:12])
            if self.stage == "train" and not self.is_train(subject_id):
                continue
            elif self.stage == "test" and self.is_train(subject_id):
                continue

            data_dict = _read_skeleton(path)
            data_dicts.append(data_dict)

        return data_dicts

    def create_train(self):
        data_dicts = self.load()

        for data_dict in tqdm(data_dicts, ncols=100, desc="creating"):
            self.labels.append(data_dict["label"])
            for key, val in data_dict.items():
                if "skel" in key:
                    self.skeleton_seqs.append(val)

    def get_train(self, idx):
        label = self.labels[idx]
        skel_seq = self.skeleton_seqs[idx]

        return skel_seq, label

    def create_test(self):
        raise NotImplementedError

    def get_pred(self, idx):
        raise NotImplementedError

    def __len__(self):
        return len(self.labels)

    def __getitem__(self, idx):
        if self.stage == "train":
            return self.get_train(idx)
        elif self.stage == "test":
            return self.get_pred(idx)


def _read_skeleton(file_path, save_skelxyz=True, save_rgbxy=True, save_depthxy=True):
    f = open(file_path, "r")
    datas = f.readlines()
    f.close()
    max_body = 4
    njoints = 25

    file_name = os.path.basename(file_path).replace(".skeleton", "")
    label = int(file_name[-3:])
    nframe = int(datas[0][:-1])
    bodymat = {"label": label, "nframe": nframe, "nbodys": [], "njoints": njoints}
    for body in range(max_body):
        if save_skelxyz:
            bodymat["skel_body{}".format(body)] = np.zeros(shape=(nframe, njoints, 3))
        if save_rgbxy:
            bodymat["rgb_body{}".format(body)] = np.zeros(shape=(nframe, njoints, 2))
        if save_depthxy:
            bodymat["depth_body{}".format(body)] = np.zeros(shape=(nframe, njoints, 2))
    # above prepare the data holder
    cursor = 0
    for frame in range(nframe):
        cursor += 1
        bodycount = int(datas[cursor][:-1])
        if bodycount == 0:
            continue
        # skip the empty frame
        bodymat["nbodys"].append(bodycount)
        for body in range(bodycount):
            cursor += 1
            skel_body = "skel_body{}".format(body)
            rgb_body = "rgb_body{}".format(body)
            depth_body = "depth_body{}".format(body)

            cursor += 1

            njoints = int(datas[cursor][:-1])
            for joint in range(njoints):
                cursor += 1
                jointinfo = datas[cursor][:-1].split(" ")
                jointinfo = np.array(list(map(float, jointinfo)))
                if save_skelxyz:
                    bodymat[skel_body][frame, joint] = jointinfo[:3]
                if save_depthxy:
                    bodymat[depth_body][frame, joint] = jointinfo[3:5]
                if save_rgbxy:
                    bodymat[rgb_body][frame, joint] = jointinfo[5:7]

    # prune the abundant bodys
    for each in range(max_body):
        if each >= max(bodymat["nbodys"]):
            if save_skelxyz:
                del bodymat["skel_body{}".format(each)]
            if save_rgbxy:
                del bodymat["rgb_body{}".format(each)]
            if save_depthxy:
                del bodymat["depth_body{}".format(each)]
    return bodymat


_ignore_list = [
    "S001C002P005R002A008",
    "S001C002P006R001A008",
    "S001C003P002R001A055",
    "S001C003P002R002A012",
    "S001C003P005R002A004",
    "S001C003P005R002A005",
    "S001C003P005R002A006",
    "S001C003P006R002A008",
    "S002C002P011R002A030",
    "S002C003P008R001A020",
    "S002C003P010R002A010",
    "S002C003P011R002A007",
    "S002C003P011R002A011",
    "S002C003P014R002A007",
    "S003C001P019R001A055",
    "S003C002P002R002A055",
    "S003C002P018R002A055",
    "S003C003P002R001A055",
    "S003C003P016R001A055",
    "S003C003P018R002A024",
    "S004C002P003R001A013",
    "S004C002P008R001A009",
    "S004C002P020R001A003",
    "S004C002P020R001A004",
    "S004C002P020R001A012",
    "S004C002P020R001A020",
    "S004C002P020R001A021",
    "S004C002P020R001A036",
    "S005C002P004R001A001",
    "S005C002P004R001A003",
    "S005C002P010R001A016",
    "S005C002P010R001A017",
    "S005C002P010R001A048",
    "S005C002P010R001A049",
    "S005C002P016R001A009",
    "S005C002P016R001A010",
    "S005C002P018R001A003",
    "S005C002P018R001A028",
    "S005C002P018R001A029",
    "S005C003P016R002A009",
    "S005C003P018R002A013",
    "S005C003P021R002A057",
    "S006C001P001R002A055",
    "S006C002P007R001A005",
    "S006C002P007R001A006",
    "S006C002P016R001A043",
    "S006C002P016R001A051",
    "S006C002P016R001A052",
    "S006C002P022R001A012",
    "S006C002P023R001A020",
    "S006C002P023R001A021",
    "S006C002P023R001A022",
    "S006C002P023R001A023",
    "S006C002P024R001A018",
    "S006C002P024R001A019",
    "S006C003P001R002A013",
    "S006C003P007R002A009",
    "S006C003P007R002A010",
    "S006C003P007R002A025",
    "S006C003P016R001A060",
    "S006C003P017R001A055",
    "S006C003P017R002A013",
    "S006C003P017R002A014",
    "S006C003P017R002A015",
    "S006C003P022R002A013",
    "S007C001P018R002A050",
    "S007C001P025R002A051",
    "S007C001P028R001A050",
    "S007C001P028R001A051",
    "S007C001P028R001A052",
    "S007C002P008R002A008",
    "S007C002P015R002A055",
    "S007C002P026R001A008",
    "S007C002P026R001A009",
    "S007C002P026R001A010",
    "S007C002P026R001A011",
    "S007C002P026R001A012",
    "S007C002P026R001A050",
    "S007C002P027R001A011",
    "S007C002P027R001A013",
    "S007C002P028R002A055",
    "S007C003P007R001A002",
    "S007C003P007R001A004",
    "S007C003P019R001A060",
    "S007C003P027R002A001",
    "S007C003P027R002A002",
    "S007C003P027R002A003",
    "S007C003P027R002A004",
    "S007C003P027R002A005",
    "S007C003P027R002A006",
    "S007C003P027R002A007",
    "S007C003P027R002A008",
    "S007C003P027R002A009",
    "S007C003P027R002A010",
    "S007C003P027R002A011",
    "S007C003P027R002A012",
    "S007C003P027R002A013",
    "S008C002P001R001A009",
    "S008C002P001R001A010",
    "S008C002P001R001A014",
    "S008C002P001R001A015",
    "S008C002P001R001A016",
    "S008C002P001R001A018",
    "S008C002P001R001A019",
    "S008C002P008R002A059",
    "S008C002P025R001A060",
    "S008C002P029R001A004",
    "S008C002P031R001A005",
    "S008C002P031R001A006",
    "S008C002P032R001A018",
    "S008C002P034R001A018",
    "S008C002P034R001A019",
    "S008C002P035R001A059",
    "S008C002P035R002A002",
    "S008C002P035R002A005",
    "S008C003P007R001A009",
    "S008C003P007R001A016",
    "S008C003P007R001A017",
    "S008C003P007R001A018",
    "S008C003P007R001A019",
    "S008C003P007R001A020",
    "S008C003P007R001A021",
    "S008C003P007R001A022",
    "S008C003P007R001A023",
    "S008C003P007R001A025",
    "S008C003P007R001A026",
    "S008C003P007R001A028",
    "S008C003P007R001A029",
    "S008C003P007R002A003",
    "S008C003P008R002A050",
    "S008C003P025R002A002",
    "S008C003P025R002A011",
    "S008C003P025R002A012",
    "S008C003P025R002A016",
    "S008C003P025R002A020",
    "S008C003P025R002A022",
    "S008C003P025R002A023",
    "S008C003P025R002A030",
    "S008C003P025R002A031",
    "S008C003P025R002A032",
    "S008C003P025R002A033",
    "S008C003P025R002A049",
    "S008C003P025R002A060",
    "S008C003P031R001A001",
    "S008C003P031R002A004",
    "S008C003P031R002A014",
    "S008C003P031R002A015",
    "S008C003P031R002A016",
    "S008C003P031R002A017",
    "S008C003P032R002A013",
    "S008C003P033R002A001",
    "S008C003P033R002A011",
    "S008C003P033R002A012",
    "S008C003P034R002A001",
    "S008C003P034R002A012",
    "S008C003P034R002A022",
    "S008C003P034R002A023",
    "S008C003P034R002A024",
    "S008C003P034R002A044",
    "S008C003P034R002A045",
    "S008C003P035R002A016",
    "S008C003P035R002A017",
    "S008C003P035R002A018",
    "S008C003P035R002A019",
    "S008C003P035R002A020",
    "S008C003P035R002A021",
    "S009C002P007R001A001",
    "S009C002P007R001A003",
    "S009C002P007R001A014",
    "S009C002P008R001A014",
    "S009C002P015R002A050",
    "S009C002P016R001A002",
    "S009C002P017R001A028",
    "S009C002P017R001A029",
    "S009C003P017R002A030",
    "S009C003P025R002A054",
    "S010C001P007R002A020",
    "S010C002P016R002A055",
    "S010C002P017R001A005",
    "S010C002P017R001A018",
    "S010C002P017R001A019",
    "S010C002P019R001A001",
    "S010C002P025R001A012",
    "S010C003P007R002A043",
    "S010C003P008R002A003",
    "S010C003P016R001A055",
    "S010C003P017R002A055",
    "S011C001P002R001A008",
    "S011C001P018R002A050",
    "S011C002P008R002A059",
    "S011C002P016R002A055",
    "S011C002P017R001A020",
    "S011C002P017R001A021",
    "S011C002P018R002A055",
    "S011C002P027R001A009",
    "S011C002P027R001A010",
    "S011C002P027R001A037",
    "S011C003P001R001A055",
    "S011C003P002R001A055",
    "S011C003P008R002A012",
    "S011C003P015R001A055",
    "S011C003P016R001A055",
    "S011C003P019R001A055",
    "S011C003P025R001A055",
    "S011C003P028R002A055",
    "S012C001P019R001A060",
    "S012C001P019R002A060",
    "S012C002P015R001A055",
    "S012C002P017R002A012",
    "S012C002P025R001A060",
    "S012C003P008R001A057",
    "S012C003P015R001A055",
    "S012C003P015R002A055",
    "S012C003P016R001A055",
    "S012C003P017R002A055",
    "S012C003P018R001A055",
    "S012C003P018R001A057",
    "S012C003P019R002A011",
    "S012C003P019R002A012",
    "S012C003P025R001A055",
    "S012C003P027R001A055",
    "S012C003P027R002A009",
    "S012C003P028R001A035",
    "S012C003P028R002A055",
    "S013C001P015R001A054",
    "S013C001P017R002A054",
    "S013C001P018R001A016",
    "S013C001P028R001A040",
    "S013C002P015R001A054",
    "S013C002P017R002A054",
    "S013C002P028R001A040",
    "S013C003P008R002A059",
    "S013C003P015R001A054",
    "S013C003P017R002A054",
    "S013C003P025R002A022",
    "S013C003P027R001A055",
    "S013C003P028R001A040",
    "S014C001P027R002A040",
    "S014C002P015R001A003",
    "S014C002P019R001A029",
    "S014C002P025R002A059",
    "S014C002P027R002A040",
    "S014C002P039R001A050",
    "S014C003P007R002A059",
    "S014C003P015R002A055",
    "S014C003P019R002A055",
    "S014C003P025R001A048",
    "S014C003P027R002A040",
    "S015C001P008R002A040",
    "S015C001P016R001A055",
    "S015C001P017R001A055",
    "S015C001P017R002A055",
    "S015C002P007R001A059",
    "S015C002P008R001A003",
    "S015C002P008R001A004",
    "S015C002P008R002A040",
    "S015C002P015R001A002",
    "S015C002P016R001A001",
    "S015C002P016R002A055",
    "S015C003P008R002A007",
    "S015C003P008R002A011",
    "S015C003P008R002A012",
    "S015C003P008R002A028",
    "S015C003P008R002A040",
    "S015C003P025R002A012",
    "S015C003P025R002A017",
    "S015C003P025R002A020",
    "S015C003P025R002A021",
    "S015C003P025R002A030",
    "S015C003P025R002A033",
    "S015C003P025R002A034",
    "S015C003P025R002A036",
    "S015C003P025R002A037",
    "S015C003P025R002A044",
    "S016C001P019R002A040",
    "S016C001P025R001A011",
    "S016C001P025R001A012",
    "S016C001P025R001A060",
    "S016C001P040R001A055",
    "S016C001P040R002A055",
    "S016C002P008R001A011",
    "S016C002P019R002A040",
    "S016C002P025R002A012",
    "S016C003P008R001A011",
    "S016C003P008R002A002",
    "S016C003P008R002A003",
    "S016C003P008R002A004",
    "S016C003P008R002A006",
    "S016C003P008R002A009",
    "S016C003P019R002A040",
    "S016C003P039R002A016",
    "S017C001P016R002A031",
    "S017C002P007R001A013",
    "S017C002P008R001A009",
    "S017C002P015R001A042",
    "S017C002P016R002A031",
    "S017C002P016R002A055",
    "S017C003P007R002A013",
    "S017C003P008R001A059",
    "S017C003P016R002A031",
    "S017C003P017R001A055",
    "S017C003P020R001A059",
    "S001C002P005R002A008",
    "S001C002P006R001A008",
    "S001C003P002R001A055",
    "S001C003P002R002A012",
    "S001C003P005R002A004",
    "S001C003P005R002A005",
    "S001C003P005R002A006",
    "S001C003P006R002A008",
    "S002C002P011R002A030",
    "S002C003P008R001A020",
    "S002C003P010R002A010",
    "S002C003P011R002A007",
    "S002C003P011R002A011",
    "S002C003P014R002A007",
    "S003C001P019R001A055",
    "S003C002P002R002A055",
    "S003C002P018R002A055",
    "S003C003P002R001A055",
    "S003C003P016R001A055",
    "S003C003P018R002A024",
    "S004C002P003R001A013",
    "S004C002P008R001A009",
    "S004C002P020R001A003",
    "S004C002P020R001A004",
    "S004C002P020R001A012",
    "S004C002P020R001A020",
    "S004C002P020R001A021",
    "S004C002P020R001A036",
    "S005C002P004R001A001",
    "S005C002P004R001A003",
    "S005C002P010R001A016",
    "S005C002P010R001A017",
    "S005C002P010R001A048",
    "S005C002P010R001A049",
    "S005C002P016R001A009",
    "S005C002P016R001A010",
    "S005C002P018R001A003",
    "S005C002P018R001A028",
    "S005C002P018R001A029",
    "S005C003P016R002A009",
    "S005C003P018R002A013",
    "S005C003P021R002A057",
    "S006C001P001R002A055",
    "S006C002P007R001A005",
    "S006C002P007R001A006",
    "S006C002P016R001A043",
    "S006C002P016R001A051",
    "S006C002P016R001A052",
    "S006C002P022R001A012",
    "S006C002P023R001A020",
    "S006C002P023R001A021",
    "S006C002P023R001A022",
    "S006C002P023R001A023",
    "S006C002P024R001A018",
    "S006C002P024R001A019",
    "S006C003P001R002A013",
    "S006C003P007R002A009",
    "S006C003P007R002A010",
    "S006C003P007R002A025",
    "S006C003P016R001A060",
    "S006C003P017R001A055",
    "S006C003P017R002A013",
    "S006C003P017R002A014",
    "S006C003P017R002A015",
    "S006C003P022R002A013",
    "S007C001P018R002A050",
    "S007C001P025R002A051",
    "S007C001P028R001A050",
    "S007C001P028R001A051",
    "S007C001P028R001A052",
    "S007C002P008R002A008",
    "S007C002P015R002A055",
    "S007C002P026R001A008",
    "S007C002P026R001A009",
    "S007C002P026R001A010",
    "S007C002P026R001A011",
    "S007C002P026R001A012",
    "S007C002P026R001A050",
    "S007C002P027R001A011",
    "S007C002P027R001A013",
    "S007C002P028R002A055",
    "S007C003P007R001A002",
    "S007C003P007R001A004",
    "S007C003P019R001A060",
    "S007C003P027R002A001",
    "S007C003P027R002A002",
    "S007C003P027R002A003",
    "S007C003P027R002A004",
    "S007C003P027R002A005",
    "S007C003P027R002A006",
    "S007C003P027R002A007",
    "S007C003P027R002A008",
    "S007C003P027R002A009",
    "S007C003P027R002A010",
    "S007C003P027R002A011",
    "S007C003P027R002A012",
    "S007C003P027R002A013",
    "S008C002P001R001A009",
    "S008C002P001R001A010",
    "S008C002P001R001A014",
    "S008C002P001R001A015",
    "S008C002P001R001A016",
    "S008C002P001R001A018",
    "S008C002P001R001A019",
    "S008C002P008R002A059",
    "S008C002P025R001A060",
    "S008C002P029R001A004",
    "S008C002P031R001A005",
    "S008C002P031R001A006",
    "S008C002P032R001A018",
    "S008C002P034R001A018",
    "S008C002P034R001A019",
    "S008C002P035R001A059",
    "S008C002P035R002A002",
    "S008C002P035R002A005",
    "S008C003P007R001A009",
    "S008C003P007R001A016",
    "S008C003P007R001A017",
    "S008C003P007R001A018",
    "S008C003P007R001A019",
    "S008C003P007R001A020",
    "S008C003P007R001A021",
    "S008C003P007R001A022",
    "S008C003P007R001A023",
    "S008C003P007R001A025",
    "S008C003P007R001A026",
    "S008C003P007R001A028",
    "S008C003P007R001A029",
    "S008C003P007R002A003",
    "S008C003P008R002A050",
    "S008C003P025R002A002",
    "S008C003P025R002A011",
    "S008C003P025R002A012",
    "S008C003P025R002A016",
    "S008C003P025R002A020",
    "S008C003P025R002A022",
    "S008C003P025R002A023",
    "S008C003P025R002A030",
    "S008C003P025R002A031",
    "S008C003P025R002A032",
    "S008C003P025R002A033",
    "S008C003P025R002A049",
    "S008C003P025R002A060",
    "S008C003P031R001A001",
    "S008C003P031R002A004",
    "S008C003P031R002A014",
    "S008C003P031R002A015",
    "S008C003P031R002A016",
    "S008C003P031R002A017",
    "S008C003P032R002A013",
    "S008C003P033R002A001",
    "S008C003P033R002A011",
    "S008C003P033R002A012",
    "S008C003P034R002A001",
    "S008C003P034R002A012",
    "S008C003P034R002A022",
    "S008C003P034R002A023",
    "S008C003P034R002A024",
    "S008C003P034R002A044",
    "S008C003P034R002A045",
    "S008C003P035R002A016",
    "S008C003P035R002A017",
    "S008C003P035R002A018",
    "S008C003P035R002A019",
    "S008C003P035R002A020",
    "S008C003P035R002A021",
    "S009C002P007R001A001",
    "S009C002P007R001A003",
    "S009C002P007R001A014",
    "S009C002P008R001A014",
    "S009C002P015R002A050",
    "S009C002P016R001A002",
    "S009C002P017R001A028",
    "S009C002P017R001A029",
    "S009C003P017R002A030",
    "S009C003P025R002A054",
    "S010C001P007R002A020",
    "S010C002P016R002A055",
    "S010C002P017R001A005",
    "S010C002P017R001A018",
    "S010C002P017R001A019",
    "S010C002P019R001A001",
    "S010C002P025R001A012",
    "S010C003P007R002A043",
    "S010C003P008R002A003",
    "S010C003P016R001A055",
    "S010C003P017R002A055",
    "S011C001P002R001A008",
    "S011C001P018R002A050",
    "S011C002P008R002A059",
    "S011C002P016R002A055",
    "S011C002P017R001A020",
    "S011C002P017R001A021",
    "S011C002P018R002A055",
    "S011C002P027R001A009",
    "S011C002P027R001A010",
    "S011C002P027R001A037",
    "S011C003P001R001A055",
    "S011C003P002R001A055",
    "S011C003P008R002A012",
    "S011C003P015R001A055",
    "S011C003P016R001A055",
    "S011C003P019R001A055",
    "S011C003P025R001A055",
    "S011C003P028R002A055",
    "S012C001P019R001A060",
    "S012C001P019R002A060",
    "S012C002P015R001A055",
    "S012C002P017R002A012",
    "S012C002P025R001A060",
    "S012C003P008R001A057",
    "S012C003P015R001A055",
    "S012C003P015R002A055",
    "S012C003P016R001A055",
    "S012C003P017R002A055",
    "S012C003P018R001A055",
    "S012C003P018R001A057",
    "S012C003P019R002A011",
    "S012C003P019R002A012",
    "S012C003P025R001A055",
    "S012C003P027R001A055",
    "S012C003P027R002A009",
    "S012C003P028R001A035",
    "S012C003P028R002A055",
    "S013C001P015R001A054",
    "S013C001P017R002A054",
    "S013C001P018R001A016",
    "S013C001P028R001A040",
    "S013C002P015R001A054",
    "S013C002P017R002A054",
    "S013C002P028R001A040",
    "S013C003P008R002A059",
    "S013C003P015R001A054",
    "S013C003P017R002A054",
    "S013C003P025R002A022",
    "S013C003P027R001A055",
    "S013C003P028R001A040",
    "S014C001P027R002A040",
    "S014C002P015R001A003",
    "S014C002P019R001A029",
    "S014C002P025R002A059",
    "S014C002P027R002A040",
    "S014C002P039R001A050",
    "S014C003P007R002A059",
    "S014C003P015R002A055",
    "S014C003P019R002A055",
    "S014C003P025R001A048",
    "S014C003P027R002A040",
    "S015C001P008R002A040",
    "S015C001P016R001A055",
    "S015C001P017R001A055",
    "S015C001P017R002A055",
    "S015C002P007R001A059",
    "S015C002P008R001A003",
    "S015C002P008R001A004",
    "S015C002P008R002A040",
    "S015C002P015R001A002",
    "S015C002P016R001A001",
    "S015C002P016R002A055",
    "S015C003P008R002A007",
    "S015C003P008R002A011",
    "S015C003P008R002A012",
    "S015C003P008R002A028",
    "S015C003P008R002A040",
    "S015C003P025R002A012",
    "S015C003P025R002A017",
    "S015C003P025R002A020",
    "S015C003P025R002A021",
    "S015C003P025R002A030",
    "S015C003P025R002A033",
    "S015C003P025R002A034",
    "S015C003P025R002A036",
    "S015C003P025R002A037",
    "S015C003P025R002A044",
    "S016C001P019R002A040",
    "S016C001P025R001A011",
    "S016C001P025R001A012",
    "S016C001P025R001A060",
    "S016C001P040R001A055",
    "S016C001P040R002A055",
    "S016C002P008R001A011",
    "S016C002P019R002A040",
    "S016C002P025R002A012",
    "S016C003P008R001A011",
    "S016C003P008R002A002",
    "S016C003P008R002A003",
    "S016C003P008R002A004",
    "S016C003P008R002A006",
    "S016C003P008R002A009",
    "S016C003P019R002A040",
    "S016C003P039R002A016",
    "S017C001P016R002A031",
    "S017C002P007R001A013",
    "S017C002P008R001A009",
    "S017C002P015R001A042",
    "S017C002P016R002A031",
    "S017C002P016R002A055",
    "S017C003P007R002A013",
    "S017C003P008R001A059",
    "S017C003P016R002A031",
    "S017C003P017R001A055",
    "S017C003P020R001A059",
    "S019C001P046R001A075",
    "S019C002P042R001A094",
    "S019C002P042R001A095",
    "S019C002P042R001A096",
    "S019C002P042R001A097",
    "S019C002P042R001A098",
    "S019C002P042R001A099",
    "S019C002P042R001A100",
    "S019C002P042R001A101",
    "S019C002P042R001A102",
    "S019C002P049R002A074",
    "S019C002P049R002A079",
    "S019C002P051R001A061",
    "S019C003P046R001A061",
    "S019C003P046R002A061",
    "S019C003P046R002A062",
    "S020C002P041R001A063",
    "S020C002P041R001A064",
    "S020C002P044R001A063",
    "S020C002P044R001A064",
    "S020C002P044R001A066",
    "S020C002P044R001A084",
    "S020C002P054R001A081",
    "S021C001P059R001A108",
    "S021C002P055R001A065",
    "S021C002P055R001A092",
    "S021C002P055R001A093",
    "S021C002P057R001A064",
    "S021C002P058R001A063",
    "S021C002P058R001A064",
    "S021C002P059R001A074",
    "S021C002P059R001A075",
    "S021C002P059R001A076",
    "S021C002P059R001A077",
    "S021C002P059R001A078",
    "S021C002P059R001A079",
    "S021C003P057R002A078",
    "S021C003P057R002A079",
    "S021C003P057R002A094",
    "S022C002P061R001A113",
    "S022C003P061R002A061",
    "S022C003P061R002A062",
    "S022C003P063R002A061",
    "S022C003P063R002A062",
    "S022C003P063R002A063",
    "S022C003P063R002A064",
    "S022C003P063R002A078",
    "S022C003P064R002A061",
    "S022C003P064R002A062",
    "S022C003P065R002A061",
    "S022C003P065R002A062",
    "S022C003P065R002A119",
    "S022C003P067R002A064",
    "S023C002P055R001A114",
    "S023C002P055R002A092",
    "S023C002P059R001A075",
    "S023C002P063R001A075",
    "S023C003P055R002A093",
    "S023C003P055R002A094",
    "S023C003P061R002A061",
    "S023C003P064R001A092",
    "S024C001P063R001A109",
    "S024C002P062R002A074",
    "S024C002P067R001A100",
    "S024C002P067R001A101",
    "S024C002P067R001A102",
    "S024C002P067R001A103",
    "S024C003P062R002A074",
    "S024C003P063R002A061",
    "S024C003P063R002A062",
    "S025C001P055R002A119",
    "S025C003P056R002A119",
    "S025C003P059R002A115",
    "S026C002P044R001A061",
    "S026C002P044R001A062",
    "S026C002P070R001A092",
    "S026C003P069R002A075",
    "S026C003P074R002A061",
    "S026C003P074R002A062",
    "S026C003P075R001A117",
    "S026C003P075R001A118",
    "S027C001P082R001A063",
    "S027C002P044R002A092",
    "S027C002P079R001A061",
    "S027C002P079R001A062",
    "S027C002P079R001A063",
    "S027C002P079R001A064",
    "S027C002P082R001A092",
    "S027C002P084R001A061",
    "S027C002P084R001A062",
    "S027C002P086R001A061",
    "S027C003P041R002A087",
    "S027C003P080R002A061",
    "S027C003P082R002A061",
    "S027C003P082R002A062",
    "S027C003P086R002A061",
    "S027C003P086R002A062",
    "S028C001P087R001A061",
    "S028C002P041R001A091",
    "S028C002P087R001A061",
    "S028C003P042R002A064",
    "S028C003P046R002A063",
    "S028C003P046R002A066",
    "S028C003P046R002A067",
    "S028C003P046R002A068",
    "S028C003P046R002A069",
    "S028C003P046R002A070",
    "S028C003P046R002A071",
    "S028C003P046R002A072",
    "S028C003P046R002A074",
    "S028C003P046R002A075",
    "S028C003P046R002A077",
    "S028C003P046R002A081",
    "S028C003P046R002A082",
    "S028C003P046R002A083",
    "S028C003P046R002A084",
    "S028C003P048R002A061",
    "S028C003P048R002A062",
    "S028C003P048R002A073",
    "S028C003P073R002A073",
    "S028C003P087R001A061",
    "S028C003P087R002A061",
    "S028C003P087R002A062",
    "S029C001P043R002A092",
    "S029C001P044R002A092",
    "S029C001P048R001A073",
    "S029C001P089R001A063",
    "S029C002P041R001A074",
    "S029C002P041R001A084",
    "S029C002P044R001A091",
    "S029C002P048R001A075",
    "S029C002P048R001A081",
    "S029C002P074R001A081",
    "S029C002P074R001A095",
    "S029C002P074R001A096",
    "S029C002P080R001A091",
    "S029C002P088R001A066",
    "S029C002P089R001A065",
    "S029C002P090R001A067",
    "S029C003P008R002A065",
    "S029C003P008R002A067",
    "S029C003P041R001A089",
    "S029C003P043R001A080",
    "S029C003P043R001A092",
    "S029C003P043R001A105",
    "S029C003P043R002A085",
    "S029C003P043R002A086",
    "S029C003P044R002A106",
    "S029C003P048R001A065",
    "S029C003P048R002A073",
    "S029C003P048R002A074",
    "S029C003P048R002A075",
    "S029C003P048R002A076",
    "S029C003P048R002A092",
    "S029C003P048R002A094",
    "S029C003P051R002A073",
    "S029C003P051R002A074",
    "S029C003P051R002A075",
    "S029C003P051R002A076",
    "S029C003P051R002A077",
    "S029C003P051R002A078",
    "S029C003P051R002A079",
    "S029C003P051R002A080",
    "S029C003P051R002A081",
    "S029C003P051R002A082",
    "S029C003P051R002A083",
    "S029C003P051R002A084",
    "S029C003P051R002A085",
    "S029C003P051R002A086",
    "S029C003P051R002A110",
    "S029C003P067R001A098",
    "S029C003P074R002A110",
    "S029C003P080R002A066",
    "S029C003P088R002A078",
    "S029C003P089R001A075",
    "S029C003P089R002A061",
    "S029C003P089R002A062",
    "S029C003P089R002A063",
    "S029C003P090R002A092",
    "S029C003P090R002A095",
    "S030C002P091R002A091",
    "S030C002P091R002A092",
    "S030C002P091R002A093",
    "S030C002P091R002A094",
    "S030C002P091R002A095",
    "S030C002P091R002A096",
    "S030C002P091R002A097",
    "S030C002P091R002A098",
    "S030C002P091R002A099",
    "S030C002P091R002A100",
    "S030C002P091R002A101",
    "S030C002P091R002A102",
    "S030C002P091R002A103",
    "S030C002P091R002A104",
    "S030C002P091R002A105",
    "S030C003P044R002A065",
    "S030C003P044R002A081",
    "S030C003P044R002A084",
    "S031C002P042R001A111",
    "S031C002P051R001A061",
    "S031C002P051R001A062",
    "S031C002P067R001A067",
    "S031C002P067R001A068",
    "S031C002P067R001A069",
    "S031C002P067R001A070",
    "S031C002P067R001A071",
    "S031C002P067R001A072",
    "S031C002P082R001A075",
    "S031C002P082R002A117",
    "S031C002P097R001A061",
    "S031C002P097R001A062",
    "S031C003P043R002A074",
    "S031C003P043R002A075",
    "S031C003P044R002A094",
    "S031C003P082R002A067",
    "S031C003P082R002A068",
    "S031C003P082R002A069",
    "S031C003P082R002A070",
    "S031C003P082R002A071",
    "S031C003P082R002A072",
    "S031C003P082R002A073",
    "S031C003P082R002A075",
    "S031C003P082R002A076",
    "S031C003P082R002A077",
    "S031C003P082R002A084",
    "S031C003P082R002A085",
    "S031C003P082R002A086",
    "S032C002P067R001A092",
    "S032C003P067R002A066",
    "S032C003P067R002A067",
    "S032C003P067R002A075",
    "S032C003P067R002A076",
    "S032C003P067R002A077",
]
